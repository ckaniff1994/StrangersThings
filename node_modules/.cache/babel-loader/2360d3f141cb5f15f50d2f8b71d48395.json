{"ast":null,"code":"const BASEURL = \"https://strangers-things.herokuapp.com/api/2207-FTB-ET-WEB-PT\";\nconst makeHeaders = () => {\n  const headers = {\n    \"Content-Type\": \"application/json\"\n  };\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n  ;\n  return headers;\n};\nexport const fetchPosts = async () => {\n  try {\n    const response = await fetch(`${BASEURL}/posts`);\n    console.log(\"response\", response);\n    const {\n      data\n    } = await response.json();\n    console.log(\"this is data\", data);\n    return data.posts;\n  } catch (error) {\n    console.error(\"Error fetching posts\", error);\n  }\n};\nexport const fetchRegister = async (username, password) => {\n  try {\n    const response = await fetch(`${BASEURL}/users/register`, {\n      method: \"POST\",\n      headers: makeHeaders(),\n      body: JSON.stringify({\n        user: {\n          username,\n          password\n        }\n      })\n    });\n    console.log(\"response2\", response);\n    const data = await response.json();\n    console.log(\"THEDATA\", data);\n    return data;\n  } catch (error) {\n    console.error(\"Error registering new user\", error);\n  }\n};\nexport const fetchLogin = async (username, password) => {\n  try {\n    const response = await fetch(`${BASEURL}/users/login`, {\n      method: \"POST\",\n      headers: makeHeaders(),\n      body: JSON.stringify({\n        user: {\n          username,\n          password\n        }\n      })\n    });\n    console.log(\"response 4\", response);\n    const data = await response.json();\n    console.log(\"LOGIN DATA\", data);\n    return data;\n  } catch (error) {\n    console.error(\"There was an error logging in\", error);\n  }\n};\nexport const fetchGuest = async token => {\n  try {\n    const response = await fetch(`${BASEURL}/users/me`, {\n      headers: makeHeaders(token)\n    });\n    console.log(\"RESONSE 3\", response);\n    const data = await response.json();\n    console.log(\"USER DATA\", data);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const createPost = async () => {};","map":{"version":3,"names":["BASEURL","makeHeaders","headers","token","fetchPosts","response","fetch","console","log","data","json","posts","error","fetchRegister","username","password","method","body","JSON","stringify","user","fetchLogin","fetchGuest","createPost"],"sources":["/Users/colinkaniff/Desktop/StrangersThings/src/api/api.js"],"sourcesContent":["const BASEURL = \"https://strangers-things.herokuapp.com/api/2207-FTB-ET-WEB-PT\";\n\nconst makeHeaders = () => {\n    const headers = {\n        \"Content-Type\": \"application/json\",\n    };\n\n    if (token) {\n        headers[\"Authorization\"] = `Bearer ${token}`;\n    };\n\n    return headers;\n};\n\nexport const fetchPosts = async () => {\n    try{\n        const response = await fetch(`${BASEURL}/posts`)\n        console.log(\"response\", response);\n        const {data} = await response.json();\n        console.log(\"this is data\", data);\n        return data.posts;\n    } catch(error) {\n        console.error(\"Error fetching posts\", error);\n    }\n};\n\nexport const fetchRegister = async (username, password) => {\n    try {\n        const response = await fetch(`${BASEURL}/users/register`, { \n        method: \"POST\",\n            headers: makeHeaders(),\n            body: JSON.stringify({\n                user: {\n                    username,\n                    password\n                }\n            }),\n        });\n        console.log(\"response2\", response);\n        const data = await response.json();\n        console.log(\"THEDATA\", data);\n        return data;\n    } catch(error) {\n        console.error(\"Error registering new user\", error)\n    }\n};\n\nexport const fetchLogin = async (username, password) => {\n    try {\n        const response = await fetch(`${BASEURL}/users/login`, {\n            method: \"POST\",\n            headers: makeHeaders(),\n            body: JSON.stringify({\n                user: {\n                    username,\n                    password\n                },\n            }),\n        });\n        console.log(\"response 4\", response);\n        const data = await response.json();\n        console.log(\"LOGIN DATA\", data);\n        return data;\n    } catch(error) {\n        console.error(\"There was an error logging in\", error);\n    }\n };\n\nexport const fetchGuest = async (token) => {\n    try {\n        const response = await fetch(`${BASEURL}/users/me`, {\n            headers: makeHeaders(token)\n        });\n        console.log(\"RESONSE 3\", response);\n        const data = await response.json();\n        console.log(\"USER DATA\", data);\n        return data;\n\n    } catch(error) {\n        console.error(error);\n    }\n}\n\nexport const createPost = async () => {\n\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}